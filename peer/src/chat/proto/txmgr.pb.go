// Code generated by protoc-gen-go.
// source: txmgr.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// transaction request body.
type CopyrightTxRequest struct {
	SessionID string `protobuf:"bytes,1,opt,name=SessionID" json:"SessionID,omitempty"`
	WorkID    string `protobuf:"bytes,2,opt,name=WorkID" json:"WorkID,omitempty"`
	From      string `protobuf:"bytes,3,opt,name=From" json:"From,omitempty"`
	To        string `protobuf:"bytes,4,opt,name=To" json:"To,omitempty"`
}

func (m *CopyrightTxRequest) Reset()                    { *m = CopyrightTxRequest{} }
func (m *CopyrightTxRequest) String() string            { return proto1.CompactTextString(m) }
func (*CopyrightTxRequest) ProtoMessage()               {}
func (*CopyrightTxRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// transaction response body.
type CopyrightTxResponse struct {
}

func (m *CopyrightTxResponse) Reset()                    { *m = CopyrightTxResponse{} }
func (m *CopyrightTxResponse) String() string            { return proto1.CompactTextString(m) }
func (*CopyrightTxResponse) ProtoMessage()               {}
func (*CopyrightTxResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func init() {
	proto1.RegisterType((*CopyrightTxRequest)(nil), "proto.CopyrightTxRequest")
	proto1.RegisterType((*CopyrightTxResponse)(nil), "proto.CopyrightTxResponse")
}

func init() { proto1.RegisterFile("txmgr.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xa9, 0xc8, 0x4d,
	0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x79, 0x5c, 0x42, 0xce,
	0xf9, 0x05, 0x95, 0x45, 0x99, 0xe9, 0x19, 0x25, 0x21, 0x15, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5,
	0x25, 0x42, 0x32, 0x5c, 0x9c, 0xc1, 0xa9, 0xc5, 0xc5, 0x99, 0xf9, 0x79, 0x9e, 0x2e, 0x12, 0x8c,
	0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x08, 0x01, 0x21, 0x31, 0x2e, 0xb6, 0xf0, 0xfc, 0xa2, 0x6c, 0x4f,
	0x17, 0x09, 0x26, 0xb0, 0x14, 0x94, 0x27, 0x24, 0xc4, 0xc5, 0xe2, 0x56, 0x94, 0x9f, 0x2b, 0xc1,
	0x0c, 0x16, 0x05, 0xb3, 0x85, 0xf8, 0xb8, 0x98, 0x42, 0xf2, 0x25, 0x58, 0xc0, 0x22, 0x4c, 0x21,
	0xf9, 0x4a, 0xa2, 0x5c, 0xc2, 0x28, 0xf6, 0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x26, 0xb1, 0x81,
	0x5d, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x86, 0x64, 0x5b, 0xa3, 0x00, 0x00, 0x00,
}
