// Code generated by protoc-gen-go.
// source: ledger.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Get blocks
type BlocksRequest struct {
	BlocksNnum uint64 `protobuf:"varint,1,opt,name=BlocksNnum" json:"BlocksNnum,omitempty"`
}

func (m *BlocksRequest) Reset()                    { *m = BlocksRequest{} }
func (m *BlocksRequest) String() string            { return proto1.CompactTextString(m) }
func (*BlocksRequest) ProtoMessage()               {}
func (*BlocksRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type BlocksResponse struct {
	Payload []byte `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
}

func (m *BlocksResponse) Reset()                    { *m = BlocksResponse{} }
func (m *BlocksResponse) String() string            { return proto1.CompactTextString(m) }
func (*BlocksResponse) ProtoMessage()               {}
func (*BlocksResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type BlockHeightRequest struct {
}

func (m *BlockHeightRequest) Reset()                    { *m = BlockHeightRequest{} }
func (m *BlockHeightRequest) String() string            { return proto1.CompactTextString(m) }
func (*BlockHeightRequest) ProtoMessage()               {}
func (*BlockHeightRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type BlockHeightResponse struct {
	BlockHeight uint64 `protobuf:"varint,1,opt,name=BlockHeight" json:"BlockHeight,omitempty"`
}

func (m *BlockHeightResponse) Reset()                    { *m = BlockHeightResponse{} }
func (m *BlockHeightResponse) String() string            { return proto1.CompactTextString(m) }
func (*BlockHeightResponse) ProtoMessage()               {}
func (*BlockHeightResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type TxPoolRequest struct {
}

func (m *TxPoolRequest) Reset()                    { *m = TxPoolRequest{} }
func (m *TxPoolRequest) String() string            { return proto1.CompactTextString(m) }
func (*TxPoolRequest) ProtoMessage()               {}
func (*TxPoolRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

type TxPoolResponse struct {
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *TxPoolResponse) Reset()                    { *m = TxPoolResponse{} }
func (m *TxPoolResponse) String() string            { return proto1.CompactTextString(m) }
func (*TxPoolResponse) ProtoMessage()               {}
func (*TxPoolResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func init() {
	proto1.RegisterType((*BlocksRequest)(nil), "proto.BlocksRequest")
	proto1.RegisterType((*BlocksResponse)(nil), "proto.BlocksResponse")
	proto1.RegisterType((*BlockHeightRequest)(nil), "proto.BlockHeightRequest")
	proto1.RegisterType((*BlockHeightResponse)(nil), "proto.BlockHeightResponse")
	proto1.RegisterType((*TxPoolRequest)(nil), "proto.TxPoolRequest")
	proto1.RegisterType((*TxPoolResponse)(nil), "proto.TxPoolResponse")
}

func init() { proto1.RegisterFile("ledger.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x49, 0x4d, 0x49,
	0x4f, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xfa, 0x5c, 0xbc,
	0x4e, 0x39, 0xf9, 0xc9, 0xd9, 0xc5, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x72, 0x5c,
	0x5c, 0x10, 0x01, 0xbf, 0xbc, 0xd2, 0x5c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x96, 0x20, 0x24, 0x11,
	0x25, 0x2d, 0x2e, 0x3e, 0x98, 0x86, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09, 0x2e, 0xf6,
	0x80, 0xc4, 0xca, 0x9c, 0xfc, 0xc4, 0x14, 0xb0, 0x72, 0x9e, 0x20, 0x18, 0x57, 0x49, 0x84, 0x4b,
	0x08, 0xac, 0xd6, 0x23, 0x35, 0x33, 0x3d, 0xa3, 0x04, 0x6a, 0x83, 0x92, 0x39, 0x97, 0x30, 0x8a,
	0x28, 0xd4, 0x18, 0x05, 0x2e, 0x6e, 0x24, 0x61, 0xa8, 0xcd, 0xc8, 0x42, 0x4a, 0xfc, 0x5c, 0xbc,
	0x21, 0x15, 0x01, 0xf9, 0xf9, 0x39, 0x30, 0x93, 0xb4, 0xb8, 0xf8, 0x60, 0x02, 0x08, 0xb7, 0x14,
	0xa0, 0xba, 0x05, 0xca, 0x4d, 0x62, 0x03, 0xfb, 0xd7, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x68,
	0xe2, 0xed, 0x2d, 0x06, 0x01, 0x00, 0x00,
}
