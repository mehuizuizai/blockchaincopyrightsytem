// Code generated by protoc-gen-go.
// source: chat.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	chat.proto

It has these top-level messages:
	Request
	Response
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Request_Type int32

const (
	Request_CONSENSUS Request_Type = 0
)

var Request_Type_name = map[int32]string{
	0: "CONSENSUS",
}
var Request_Type_value = map[string]int32{
	"CONSENSUS": 0,
}

func (x Request_Type) String() string {
	return proto1.EnumName(Request_Type_name, int32(x))
}
func (Request_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Response_Type int32

const (
	Response_CONSENSUS Response_Type = 0
)

var Response_Type_name = map[int32]string{
	0: "CONSENSUS",
}
var Response_Type_value = map[string]int32{
	"CONSENSUS": 0,
}

func (x Response_Type) String() string {
	return proto1.EnumName(Response_Type_name, int32(x))
}
func (Response_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// 通信请求体
type Request struct {
	Type    Request_Type `protobuf:"varint,1,opt,name=type,enum=proto.Request_Type" json:"type,omitempty"`
	Payload []byte       `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 通信响应体
type Response struct {
	Type    Response_Type `protobuf:"varint,1,opt,name=type,enum=proto.Response_Type" json:"type,omitempty"`
	Payload []byte        `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto1.RegisterType((*Request)(nil), "proto.Request")
	proto1.RegisterType((*Response)(nil), "proto.Response")
	proto1.RegisterEnum("proto.Request_Type", Request_Type_name, Request_Type_value)
	proto1.RegisterEnum("proto.Response_Type", Response_Type_name, Response_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Peer service

type PeerClient interface {
	// 封装rpc
	Chat(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type peerClient struct {
	cc *grpc.ClientConn
}

func NewPeerClient(cc *grpc.ClientConn) PeerClient {
	return &peerClient{cc}
}

func (c *peerClient) Chat(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/proto.Peer/Chat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Peer service

type PeerServer interface {
	// 封装rpc
	Chat(context.Context, *Request) (*Response, error)
}

func RegisterPeerServer(s *grpc.Server, srv PeerServer) {
	s.RegisterService(&_Peer_serviceDesc, srv)
}

func _Peer_Chat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).Chat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Peer/Chat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).Chat(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Peer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Peer",
	HandlerType: (*PeerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Chat",
			Handler:    _Peer_Chat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("chat.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xce, 0x48, 0x2c,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xc9, 0x5c, 0xec, 0x41, 0xa9,
	0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xea, 0x5c, 0x2c, 0x25, 0x95, 0x05, 0xa9, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x7c, 0x46, 0xc2, 0x10, 0x75, 0x7a, 0x50, 0x59, 0xbd, 0x90, 0xca, 0x82, 0xd4, 0x20,
	0xb0, 0x02, 0x21, 0x09, 0x2e, 0xf6, 0x82, 0xc4, 0xca, 0x9c, 0xfc, 0xc4, 0x14, 0x09, 0x26, 0x05,
	0x46, 0x0d, 0x9e, 0x20, 0x18, 0x57, 0x49, 0x94, 0x8b, 0x05, 0xa4, 0x4e, 0x88, 0x97, 0x8b, 0xd3,
	0xd9, 0xdf, 0x2f, 0xd8, 0xd5, 0x2f, 0x38, 0x34, 0x58, 0x80, 0x41, 0x29, 0x95, 0x8b, 0x23, 0x28,
	0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x03, 0xc5, 0x16, 0x11, 0xb8, 0x2d, 0x10, 0x69,
	0x4a, 0xac, 0x31, 0x32, 0xe4, 0x62, 0x09, 0x48, 0x4d, 0x2d, 0x12, 0xd2, 0xe4, 0x62, 0x71, 0xce,
	0x48, 0x2c, 0x11, 0xe2, 0x43, 0xf5, 0x82, 0x14, 0x3f, 0x9a, 0x65, 0x4a, 0x0c, 0x49, 0x6c, 0x60,
	0x11, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x6c, 0x74, 0x5f, 0x1a, 0x01, 0x00, 0x00,
}
